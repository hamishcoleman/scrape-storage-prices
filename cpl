#!/usr/bin/env perl
use warnings;
use strict;
#
# Grab the hard drives data from CPL
#

# allow the libs to be in the bin dir
use FindBin;
use lib "$FindBin::RealBin/lib";
use lib "/home/hamish/s/bin/lib";

use WWW::Mechanize;
use HTML::TreeBuilder;

use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Quotekeys = 0;

use HC::Common;

my $option = {
    url => 'https://cplonline.com.au/hard-drives/desktop-hard-drives.html',
};
my @option_list = (
    'debug',
    'url=s',
);

sub url2tree {
    my $url = shift || $option->{url};

    my $mech = WWW::Mechanize->new(autocheck=>0);
    $mech->get($url);
    return undef if (!$mech->success());

    my $tree = HTML::TreeBuilder->new;
    $tree->parse($mech->content());
    $tree->eof;
    $tree->elementify;

    return $tree;
}

sub scrape1product {
    my $node = shift;
    my $data = {};

    my $url = $node->look_down('_tag', 'a');
    if (!$url) {
        warn("Could not find product image and url");
        return undef;
    }

    $data->{title} = $url->attr('title');
    $data->{url} = $url->attr('href');
    
    my $price = $node->look_down('_tag', 'span', 'class', 'price');
    if (!$price) {
        warn("Could not find price");
        return undef;
    }

    $data->{price} = $price->as_trimmed_text();

    return $data;
}

sub scrape2products {
    my $tree = shift;

    my $products = $tree->look_down(
        '_tag', 'div',
        'class', 'category-products',
    );
    if (!$products) {
        warn("Could not find products");
        return undef;
    }

    my @products;
    for my $node ($products->look_down(
            '_tag', 'li',
            'class', qr/item/,
        )) {
        push @products, scrape1product($node);
    }

    return @products;
}

my $tree = url2tree();
my @products = scrape2products($tree);

print Dumper(@products);

